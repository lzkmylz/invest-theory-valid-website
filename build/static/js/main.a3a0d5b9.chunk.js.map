{"version":3,"sources":["Index/Component/IndexHeader.tsx","Index/Component/TitleContent.tsx","Index/Component/IndexProductContent.tsx","Index/Component/IndexFooter.tsx","Index/Container/IndexContainer.tsx","Index/Component/LoginForm.tsx","Index/Container/LoginContainer.tsx","Index/Component/RegisterForm.tsx","Index/Container/RegisterContainer.tsx","Index/Index.tsx","Router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["IndexHeader","state","anchorEl","handleClick","event","setState","currentTarget","handleClose","className","href","IconButton","onClick","this","List","htmlColor","fontSize","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","React","Component","Fade","require","TitleContent","bottom","delay","Button","variant","color","size","IndexProductContent","src","alt","IndexFooter","IndexContainer","LoginForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","getFieldDecorator","onSubmit","Item","rules","required","message","prefix","type","style","placeholder","valuePropName","initialValue","htmlType","Form","create","name","LoginContainer","RegisterForm","confirmDirty","autoCompleteResult","validateFieldsAndScroll","handleConfirmBlur","value","target","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","handleWebsiteChange","map","domain","labelCol","xs","span","sm","wrapperCol","label","hasFeedback","validator","Password","onBlur","title","whitespace","extra","gutter","offset","RegisterContainer","Index","path","component","exact","Router","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3a0d5b9.chunk.js","sourcesContent":["import React from 'react';\nimport '../Style/IndexHeader.scss';\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\nimport { List } from '@material-ui/icons';\n\nclass IndexHeader extends React.Component {\n  state = {\n    anchorEl: null,\n  }\n\n  handleClick = (event: any) => {\n    this.setState({ anchorEl: event.currentTarget });\n  }\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  }\n\n  render() {\n    return (\n      <div className=\"header-container\" >\n        <h1 className=\"header-title\" >\n          <a href=\"/\" >InvestValid</a>\n        </h1>\n        <div className=\"header-menu mobile\" >\n          <IconButton onClick={this.handleClick} >\n            <List htmlColor=\"#ffffff\" fontSize=\"large\" />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={this.state.anchorEl}\n            keepMounted\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.handleClose}\n          >\n            <MenuItem onClick={this.handleClose}>Products</MenuItem>\n            <MenuItem onClick={this.handleClose}>Pricing</MenuItem>\n            <MenuItem onClick={this.handleClose}>Support</MenuItem>\n            <MenuItem onClick={this.handleClose}>\n              <a className=\"header-menuitem\" href=\"/login\" >Sign In</a>\n            </MenuItem>\n          </Menu>\n        </div>\n        <ul className=\"header-nav-container desktop\" >\n          <li className=\"header-nav-item\" ><p>Products</p></li>\n          <li className=\"header-nav-item\" ><p>Pricing</p></li>\n          <li className=\"header-nav-item\" ><p>Support</p></li>\n        </ul>\n        <h4 className=\"header-login desktop\" >\n          <a href=\"/login\" className=\"header-login-a\" >Sign In</a>\n          <div className=\"header-signup-div\" >\n            <a href=\"/register\" className=\"header-signup-a\" >Sign Up</a>\n          </div>\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default IndexHeader;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport '../Style/TitleContent.scss';\nconst Fade = require('react-reveal/Fade');\n\nclass TitleContent extends React.Component {\n  render() {\n    return (\n      <div className=\"title-content-container\" >\n        <Fade bottom={true} >\n          <h1 className=\"title-font\" >Make Best Investment Decision</h1>\n        </Fade>\n        <Fade delay={1000} bottom={true} >\n          <h1 className=\"title-style\" >With Invest Valid</h1>\n        </Fade>\n        <Fade delay={2000} bottom={true} >\n          <p className=\"content-style\" >We Use Big Data And Morden Finance Theory To Valid Your Investment And Get Better Return.</p>\n        </Fade>\n        <Button className=\"title-content-continue\" variant=\"contained\" color=\"primary\" size=\"small\" href=\"/login\" >\n          Get Start\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default TitleContent;\n","import React from 'react';\nimport '../Style/IndexProductContent.scss';\n\nclass IndexProductContent extends React.Component {\n  render() {\n    return (\n      <div className=\"index-product-container\" >\n        <div className=\"center-img\" >\n          <img className=\"stock-analysis-img\" src='./index-analys.jpg' alt=\"stock data analysis\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default IndexProductContent;\n","import React from 'react';\nimport '../Style/IndexFooter.scss';\n\nclass IndexFooter extends React.Component {\n  render() {\n    return (\n      <div className=\"index-footer-container background-dark\" >\n        <p>@2019 Author: lzkmylz</p>\n        <p>lzkmylz@gmail.com</p>\n      </div>\n    )\n  }\n}\n\nexport default IndexFooter;","import * as React from 'react';\nimport '../Style/IndexContainer.scss';\nimport Header from '../Component/IndexHeader';\nimport TitleContent from '../Component/TitleContent';\nimport ProductContent from '../Component/IndexProductContent';\nimport Footer from '../Component/IndexFooter';\n\nclass IndexContainer extends React.Component {\n  render() {\n    return (\n      <div className=\"index-container background-dark\">\n        <Header />\n        <TitleContent />\n        <ProductContent />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default IndexContainer;\n","import React from 'react';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\n\nimport '../Style/LoginForm.scss';\n\ntype Iprops = Readonly<{\n  form: any\n}>\n\nclass LoginForm extends React.Component<Iprops> {\n  handleSubmit = (e:any) => {\n    e.preventDefault();\n    this.props.form.validateFields((err:any, values:any) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n              id=\"login-username\"\n              size=\"small\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n              size=\"small\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true,\n          })(<Checkbox style={{ color: \"#1890ff\" }} className=\"login-remember\" >Remember me</Checkbox>)}\n          <a className=\"login-form-forgot\" href=\"/forgetPassword\">\n            Forgot password\n          </a>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" size=\"small\" >\n            Sign In\n          </Button>\n          Or <a href=\"/register\" className=\"login-registernow\" >Sign Up now!</a>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default Form.create({ name: 'login' })(LoginForm);\n","import React from 'react';\nimport Header from '../Component/IndexHeader';\nimport Footer from '../Component/IndexFooter';\nimport LoginForm from '../Component/LoginForm';\nimport '../Style/LoginContainer.scss';\n\nclass LoginContainer extends React.Component {\n  render() {    \n    return (\n      <div className=\"login-container background-dark\" >\n        <Header />\n        <div className=\"login-content\" >\n          <div className=\"img-flex-container\" >\n            <div className=\"login-img-container desktop \" >\n              <img src=\"./login-side.jpg\" alt=\"data change world\" className=\"login-side-img\" />\n            </div>\n          </div>\n          <div className=\"login-input-container\" >\n            <h1 className=\"login-title\" >Sign In</h1>\n            <LoginForm />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default LoginContainer;\n","import React from 'react';\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Row,\n  Col,\n  Button,\n} from 'antd';\n\nimport '../Style/RegisterForm.scss';\n\ntype Iprops = Readonly<{\n  form: any\n}>\n\nclass RegisterForm extends React.Component<Iprops> {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n  };\n\n  handleSubmit = (e:any) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err:any, values:any) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  handleConfirmBlur = (e:any) => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule:any, value:String, callback:Function) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule:any, value:String, callback:Function) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = (value:any) => {\n    let autoCompleteResult:any;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    return (\n      <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"register-form\" >\n        <Form.Item label=\"E-mail\">\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(<Input size=\"small\" />)}\n        </Form.Item>\n        <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n            ],\n          })(<Input.Password size=\"small\" />)}\n        </Form.Item>\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={this.handleConfirmBlur} size=\"small\" />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Nickname&nbsp;\n              <Tooltip title=\"What do you want others to call you?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('nickname', {\n            rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n          })(<Input size=\"small\" />)}\n        </Form.Item>\n        <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\n          <Row gutter={8}>\n            <Col span={12}>\n              {getFieldDecorator('captcha', {\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\n              })(<Input size=\"small\" />)}\n            </Col>\n            <Col span={12}>\n              <Button size=\"small\" type=\"primary\" >Get captcha</Button>\n            </Col>\n          </Row>\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Sign Up\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nexport default Form.create({ name: 'register' })(RegisterForm);\n","import React from 'react';\nimport Header from '../Component/IndexHeader';\nimport Footer from '../Component/IndexFooter';\nimport RegisterForm from '../Component/RegisterForm';\n\nimport '../Style/RegisterContainer.scss';\n\nclass RegisterContainer extends React.Component {\n  render() {\n    return (\n      <div className=\"register-container background-dark\" >\n        <Header />\n        <div className=\"register-title\" >\n          <p>Sign Up</p>\n        </div>\n        <div className=\"register-content\" >\n          <RegisterForm />\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default RegisterContainer;\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport IndexContainer from './Container/IndexContainer';\nimport LoginContainer from './Container/LoginContainer';\nimport RegisterContainer from './Container/RegisterContainer';\n\nclass Index extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/\" component={IndexContainer} exact={true} />\n        <Route path=\"/login\" component={LoginContainer} />\n        <Route path=\"/register\" component={RegisterContainer} />\n      </Switch>\n    );\n  }\n}\n\nexport default Index;\n","import * as React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Index from './Index/Index';\n\nclass Router extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" component={Index} exact={true} />\n          <Route path=\"/login\" component={Index} />\n          <Route path=\"/register\" component={Index} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Router;","import React from 'react';\nimport Router from './Router';\nimport './App.scss';\nimport 'antd/dist/antd.css';\nimport 'reset-css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App background-dark\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}